#pragma checksum "C:\Users\Samet\source\repos\proje\proje\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0991d10b47a9faa2e82f760667ad75f2a560c544"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Samet\source\repos\proje\proje\Areas\Admin\Views\_ViewImports.cshtml"
using proje.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Samet\source\repos\proje\proje\Areas\Admin\Views\_ViewImports.cshtml"
using proje.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0991d10b47a9faa2e82f760667ad75f2a560c544", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"52b8df67caab6914fe0948208cf2a40f67b83a10", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Samet\source\repos\proje\proje\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>yazar ajax işlemleri</h1>
<br />
<button type=""button"" id =btngetlist class=""btn btn-outline-primary"">yazar listesi</button>
<button type=""button"" id =btngetbyid class=""btn btn-outline-success"">yazar getir</button>
<button type=""button"" id =btnaddwriter class=""btn btn-outline-info"">yazar ekle</button>
<button type=""button"" id =btndeletewriter class=""btn btn-outline-danger"">yazar sil</button>
<button type=""button"" id =btnupdatewriter class=""btn btn-outline-warning"">yazar güncelle</button>





<br /><br />
<div id = ""writerlist"">
    burya yazarlar gelecek
</div>

<div id=""writerget"">
 buraya bir yazar gelecek
</div>
<div>
    <input type=""text"" id =""writerid"" placeholder=""yazar id degerini girin"" class=""form-control"" />
</div>
<br />
<div>
    <input type=""text"" class=""form-control"" id = ""txtwriterid"" placeholder=""Yazar Id"" />
    <br />
    <input type=""text"" class=""form-control"" id = ""txtwritername"" placeholder=""Yazar adı"" />
</div>
<br />
<div>
     <input type=""text"" c");
            WriteLiteral(@"lass=""form-control"" id = ""txtid"" placeholder=""silinecek yazar Id"" />
</div>
<br />
<div>
     <input type=""text"" class=""form-control"" id = ""txtid1"" placeholder=""güncellenecek id"" />
     <input type=""text"" class=""form-control"" id = ""txtwritername1"" placeholder=""güncellenecek isim"" />

</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(""#btngetlist"").click(function(){
            $.ajax({
                contentType :""application/json"",
                dataType: ""json"",
                type: ""Get"",
                url:""/Admin/Writer/WriterList/"",
                success: function (func){
                    let w = jQuery.parseJSON(func);
                    console.log(w);
                    let tablehtml = ""<table class=table table-bordered> <tr><th>yazar ıd </th><th>yazar adı</th> </tr>"" 
                    $.each(w,(index,value)=>{
                        tablehtml += `<tr><td>${value.Id}</td> <td>${value.name}</td></tr>`
                    });        
                       tablehtml+=""</table>"";
                       $(""#writerlist"").html(tablehtml);
                }
            });
        });

        $(""#btngetbyid"").click(x=>{
            let id = $(""#writerid"").val();

             $.ajax({
                contentType :""application/json"",
                dataType: ""json"",
  ");
                WriteLiteral(@"              type: ""get"",
                url:""/Admin/Writer/writergetbyid/"", 
                data:{writerid : id},
                success:function(func){
                    let w = jQuery.parseJSON(func);
                     console.log(w);
                     let getvalue = `<table class=table table-bordered><tr><th>Yazar Id</th>
                     <th>Yazar adı</th></tr>  <tr><td>${w.Id}</td><td>${w.name}</td></tr></table>`;
                     $(""#writerget"").html(getvalue);
                }

             });
        });

        $(""#btnaddwriter"").click(function(){
            let writer = {
                Id: $(""#txtwriterid"").val(),
                name: $(""#txtwritername"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/AddWriter/"",
                data: writer,
                success: function (func) {
                    let result =jQuery.parseJSON(func);
                    alert(""basarılı"");
        ");
                WriteLiteral(@"        }
            }); 
        
        });
        $(""#btndeletewriter"").click(x => {
            let id = $(""#txtid"").val(); 

            $.ajax({
                url: ""/Admin/Writer/DeleteWriter/""+id,
                type:""post"",
                dataType:""json"",
                success:function(func){
                    alert(""silme başarılı"");
                }
            });
        });

        $(""#btnupdatewriter"").click(function(){
            let writer = {
                Id: $(""#txtid1"").val(),
                name: $(""#txtwritername1"").val()
            };
            $.ajax({
                type:""post"",
                url:""/Admin/Writer/UpdateWriter/"",
                data: writer,
                success:function(funk){
                    alert(""güncelleme yapıldı"");
                }
            });
        });

        

        
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
